{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","prevState","removeGood","selectedItem","filter","clearSelectetGoods","createListOfGoods","length","slice","join","this","className","map","includes","type","onClick","Boolean","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,SAPlD,EAWEG,WAAa,SAACC,GACZ,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cAAcO,QAAO,SAAAL,GAAI,OAAIA,IAASI,UAbrE,EAiBEE,mBAAqB,WACnB,EAAKL,SACH,CAAEH,cAAe,MAnBvB,EAuBES,kBAAoB,WAClB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,KAAKH,EAAgBa,OACnB,MAAO,qBAET,QACE,MAAM,GAAN,OAAUV,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,2BACQZ,EAAcW,OAAO,GAD7B,mBArCR,4CA0CE,WAAU,IAAD,OACCX,EAAkBa,KAAKd,MAAvBC,cAER,OACE,qBAAKc,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKJ,sBAGR,oBAAIK,UAAU,YAAd,SACGjB,EAAgBkB,KAAI,SAACb,GACpB,OACE,qBAEEY,UAAS,sBAAed,EAAcgB,SAASd,IAC3C,qBAHN,UAMGA,EACD,wBACEe,KAAK,SACLH,UAAU,cACVI,QACElB,EAAcgB,SAASd,GACnB,kBAAM,EAAKG,WAAWH,IACtB,kBAAM,EAAKD,QAAQC,IAN3B,SAUIF,EAAcgB,SAASd,GACnB,SACA,UAlBHA,QA0BZiB,QAAQnB,EAAcU,SACrB,wBACEO,KAAK,SACLH,UAAU,6BACVI,QAASL,KAAKL,mBAHhB,wBAnFZ,GAAyBY,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.708ba355.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (selectedItem: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== selectedItem),\n    }));\n  };\n\n  clearSelectetGoods = () => {\n    this.setState(\n      { selectedGoods: [] },\n    );\n  };\n\n  createListOfGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case goodsFromServer.length:\n        return 'All goods selected';\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')}\n          and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__frame\">\n          <h1 className=\"app__goods\">\n            {this.createListOfGoods()}\n          </h1>\n\n          <ul className=\"app__list\">\n            {goodsFromServer.map((good) => {\n              return (\n                <li\n                  key={good}\n                  className={`app__item ${selectedGoods.includes(good)\n                    ? 'app__item--active'\n                    : false}`}\n                >\n                  {good}\n                  <button\n                    type=\"button\"\n                    className=\"app__button\"\n                    onClick={\n                      selectedGoods.includes(good)\n                        ? () => this.removeGood(good)\n                        : () => this.addGood(good)\n                    }\n                  >\n                    {\n                      selectedGoods.includes(good)\n                        ? 'Remove'\n                        : 'Add'\n                    }\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n\n          {Boolean(selectedGoods.length) && (\n            <button\n              type=\"button\"\n              className=\"app__button app__button--x\"\n              onClick={this.clearSelectetGoods}\n            >\n              X\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}